version: "3.9"

services:
  mysql:
    image: mysql:8.0
    container_name: spinner_caturro_cafe_mysql
    env_file:
      - ./.env
    environment:
      TZ: ${TZ}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - caturro_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: spinner_caturro_cafe_backend
    env_file:
      - ./.env
    environment:
      - TZ=${TZ}
    volumes:
      - ./backend:/app
    networks:
      - caturro_network
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: spinner_caturro_cafe_frontend
    env_file:
      - ./.env
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - caturro_network
    depends_on:
      - backend
    restart: unless-stopped

  nginx:
    image: nginx:1.27-alpine
    container_name: spinner_caturro_cafe_nginx
    depends_on:
      - backend
      - frontend
    ports:
      - "9000:9000"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - caturro_network
    restart: unless-stopped

networks:
  caturro_network:
    driver: bridge

volumes:
  mysql_data:
